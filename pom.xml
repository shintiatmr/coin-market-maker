<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  <description>coin-market-maker</description>
  <groupId>com.ajaib.coin.market.maker</groupId>
  <artifactId>coin-market-maker</artifactId>
  <version>1.0.0-1-SNAPSHOT</version>
  <name>coin-market-maker</name>
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>2.6.7</version>
    <!-- lookup parent from repository -->
  </parent>
  <properties>
    <java.version>1.8</java.version>
    <log4j2.version>2.17.0</log4j2.version>
    <logstash-logback-encoder.version>7.0.1</logstash-logback-encoder.version>
    <spring-cloud.version>2021.0.2</spring-cloud.version>
    <commons-lang3.version>3.12.0</commons-lang3.version>
    <springdoc.version>1.6.8</springdoc.version>
    <dozer.version>6.5.2</dozer.version>
    <!-- Related to Sonar and Artifactory -->
    <jacoco.maven.plugin.version>0.8.5</jacoco.maven.plugin.version>
    <sonar.projectName>coin-market-maker</sonar.projectName>
    <sonar.projectVersion>${project.version}</sonar.projectVersion>
    <sonar.language>java</sonar.language>
    <sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
    <sonar.scanner.maven.version>3.6.0.1398</sonar.scanner.maven.version>
    <sonar.junit.reportPaths>${project.build.directory}/surefire-reports</sonar.junit.reportPaths>
    <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.release.plugin>2.5.3</maven.release.plugin>
    <maven.site.plugin.version>3.6</maven.site.plugin.version>
    <maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
    <maven.failsafe.plugin.version>2.22.1</maven.failsafe.plugin.version>
    <maven.deploy.plugin>2.8.2</maven.deploy.plugin>
    <maven.source.plugin>3.0.1</maven.source.plugin>
    <maven.javadoc.plugin>3.0.1</maven.javadoc.plugin>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <micrometer-registry-new-relic.version>0.8.0</micrometer-registry-new-relic.version>
    <newrelic-api.version>7.6.0</newrelic-api.version>
  </properties>
  <scm>
    <connection>scm:git:git@github.com:ajaibid/coin-market-maker.git</connection>
    <developerConnection>scm:git:git@github.com:ajaibid/coin-market-maker.git</developerConnection>
    <url>git@github.com:ajaibid/coin-market-maker.git</url>
    <tag>HEAD</tag>
  </scm>
  <distributionManagement>
    <repository>
      <id>central</id>
      <name>Ajaib Release</name>
      <url>https://nexus.noc.ajaib.cloud/repository/maven-releases/</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <name>Ajaib Snapshot</name>
      <url>https://nexus.noc.ajaib.cloud/repository/maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Ajaib Releases</name>
      <url>https://nexus.noc.ajaib.cloud/repository/maven-releases/</url>
    </repository>
    <repository>
      <id>snapshots</id>
      <name>Ajaib Snapshots</name>
      <url>https://nexus.noc.ajaib.cloud/repository/maven-releases/</url>
    </repository>
    <repository>
      <id>mvn-repository</id>
      <name>MVN Repository</name>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>web</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>entity</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>library</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>service-api</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>service-impl</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>repository</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>model</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>configuration</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>outbound-api</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>outbound-impl</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>inbound-api</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>inbound-impl</artifactId>
        <groupId>com.ajaib.coin.market.maker</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>spring-cloud-dependencies</artifactId>
        <groupId>org.springframework.cloud</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${spring-cloud.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.lettuce</groupId>
          <artifactId>lettuce-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-redis</artifactId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <artifactId>feign-okhttp</artifactId>
      <groupId>io.github.openfeign</groupId>
    </dependency>
    <dependency>
      <artifactId>feign-jackson</artifactId>
      <groupId>io.github.openfeign</groupId>
    </dependency>
    <dependency>
      <artifactId>feign-hystrix</artifactId>
      <groupId>io.github.openfeign</groupId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <artifactId>mysql-connector-java</artifactId>
      <groupId>mysql</groupId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>${springdoc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>com.newrelic.telemetry</groupId>
      <artifactId>micrometer-registry-new-relic</artifactId>
      <version>${micrometer-registry-new-relic.version}</version>
    </dependency>
    <dependency>
      <groupId>com.newrelic.agent.java</groupId>
      <artifactId>newrelic-api</artifactId>
      <version>${newrelic-api.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-jmx</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-micrometer</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.dozermapper</groupId>
      <artifactId>dozer-core</artifactId>
      <version>${dozer.version}</version>
    </dependency>
    <!-- Json Format Logging -->
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash-logback-encoder.version}</version>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <id>dev</id>
      <properties>
        <spring.profiles.active>dev</spring.profiles.active>
      </properties>
    </profile>
    <profile>
      <id>uat</id>
      <properties>
        <spring.profiles.active>uat</spring.profiles.active>
      </properties>
    </profile>
    <profile>
      <id>prd</id>
      <properties>
        <spring.profiles.active>prd</spring.profiles.active>
      </properties>
    </profile>
  </profiles>
  <!-- Build Plugins -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.scanner.maven.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <modules>
    <module>web</module>
    <module>configuration</module>
    <module>entity</module>
    <module>library</module>
    <module>model</module>
    <module>outbound-api</module>
    <module>outbound-impl</module>
    <module>repository</module>
    <module>service-api</module>
    <module>service-impl</module>
    <module>inbound-api</module>
    <module>inbound-impl</module>
  </modules>
</project>
